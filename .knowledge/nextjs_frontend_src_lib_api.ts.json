{"is_source_file": true, "format": "TypeScript", "description": "This file defines a set of API utility functions and data types for a frontend application to communicate with a backend server. It provides methods for authentication, fetching jobs, matching candidates to jobs, and submitting assessments, using fetch API under the hood and configurable API base URL via environment variables.", "external_files": ["node_modules/typescript/lib/lib.esnext.promise.d.ts", "node-fetch", "process.env"], "external_methods": ["fetch"], "published": ["Api"], "classes": [], "methods": [{"name": "export function getApiBaseUrl(): string { getApiBaseUrl", "description": "Returns the backend API base URL from environment variable or an empty string as fallback.", "scope": "", "scopeKind": ""}, {"name": "export async function jsonRequest<TResponse, TBody = unknown>( jsonRequest", "description": "Performs a JSON fetch to the backend and returns the parsed JSON data, or throws an error if the request fails.", "scope": "", "scopeKind": ""}, {"name": "Api.login", "description": "Logs in a user with email and password, returns token and user info."}, {"name": "Api.register", "description": "Registers a new user with name, email, password, assigns role 'applicant', returns token and user info."}, {"name": "Api.listJobs", "description": "Fetches a list of jobs from the backend, optionally filtered by a query string."}, {"name": "Api.matchJobs", "description": "Fetches jobs matched for a candidate ID, optionally filtered by score and skills."}, {"name": "Api.submitAssessment", "description": "Submits answers for a candidate's assessment, optionally with a score."}], "calls": ["fetch", "getApiBaseUrl", "jsonRequest"], "search-terms": ["API client utilities", "fetch wrapper", "auth", "job listing", "candidate matching", "assessment submission", "environment variable", "Next.js API", "typescript interface"], "state": 2, "file_id": 12, "knowledge_revision": 51, "git_revision": "", "revision_history": [{"25": ""}, {"51": ""}], "ctags": [{"_type": "tag", "name": "Api", "path": "/home/kavia/workspace/code-generation/candidate-match-platform-133245-133254/nextjs_frontend/src/lib/api.ts", "pattern": "/^export const Api = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "HttpMethod", "path": "/home/kavia/workspace/code-generation/candidate-match-platform-133245-133254/nextjs_frontend/src/lib/api.ts", "pattern": "/^type HttpMethod = \"GET\" | \"POST\";$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "Job", "path": "/home/kavia/workspace/code-generation/candidate-match-platform-133245-133254/nextjs_frontend/src/lib/api.ts", "pattern": "/^export type Job = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "JsonRequestOptions", "path": "/home/kavia/workspace/code-generation/candidate-match-platform-133245-133254/nextjs_frontend/src/lib/api.ts", "pattern": "/^interface JsonRequestOptions<TBody> {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "User", "path": "/home/kavia/workspace/code-generation/candidate-match-platform-133245-133254/nextjs_frontend/src/lib/api.ts", "pattern": "/^type User = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "body", "path": "/home/kavia/workspace/code-generation/candidate-match-platform-133245-133254/nextjs_frontend/src/lib/api.ts", "pattern": "/^  body?: TBody;$/", "language": "TypeScript", "kind": "property", "scope": "JsonRequestOptions", "scopeKind": "interface"}, {"_type": "tag", "name": "body", "path": "/home/kavia/workspace/code-generation/candidate-match-platform-133245-133254/nextjs_frontend/src/lib/api.ts", "pattern": "/^  const { method = \"GET\", path, body, headers = {} } = options;$/", "language": "TypeScript", "kind": "constant", "scope": "jsonRequest", "scopeKind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/candidate-match-platform-133245-133254/nextjs_frontend/src/lib/api.ts", "pattern": "/^      const data = await res.json();$/", "language": "TypeScript", "kind": "constant", "scope": "jsonRequest", "scopeKind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/candidate-match-platform-133245-133254/nextjs_frontend/src/lib/api.ts", "pattern": "/^    const data = (await res.json()) as TResponse;$/", "language": "TypeScript", "kind": "constant", "scope": "jsonRequest", "scopeKind": "function"}, {"_type": "tag", "name": "getApiBaseUrl", "path": "/home/kavia/workspace/code-generation/candidate-match-platform-133245-133254/nextjs_frontend/src/lib/api.ts", "pattern": "/^export function getApiBaseUrl(): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/candidate-match-platform-133245-133254/nextjs_frontend/src/lib/api.ts", "pattern": "/^    headers: {$/", "language": "TypeScript", "kind": "constant", "scope": "jsonRequest", "scopeKind": "function"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/candidate-match-platform-133245-133254/nextjs_frontend/src/lib/api.ts", "pattern": "/^  const { method = \"GET\", path, body, headers = {} } = options;$/", "language": "TypeScript", "kind": "constant", "scope": "jsonRequest", "scopeKind": "function"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/candidate-match-platform-133245-133254/nextjs_frontend/src/lib/api.ts", "pattern": "/^  headers?: Record<string, string>;$/", "language": "TypeScript", "kind": "property", "scope": "JsonRequestOptions", "scopeKind": "interface"}, {"_type": "tag", "name": "init", "path": "/home/kavia/workspace/code-generation/candidate-match-platform-133245-133254/nextjs_frontend/src/lib/api.ts", "pattern": "/^  const init: RequestInit = {$/", "language": "TypeScript", "kind": "constant", "scope": "jsonRequest", "scopeKind": "function"}, {"_type": "tag", "name": "jsonRequest", "path": "/home/kavia/workspace/code-generation/candidate-match-platform-133245-133254/nextjs_frontend/src/lib/api.ts", "pattern": "/^export async function jsonRequest<TResponse, TBody = unknown>($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "method", "path": "/home/kavia/workspace/code-generation/candidate-match-platform-133245-133254/nextjs_frontend/src/lib/api.ts", "pattern": "/^  const { method = \"GET\", path, body, headers = {} } = options;$/", "language": "TypeScript", "kind": "constant", "scope": "jsonRequest", "scopeKind": "function"}, {"_type": "tag", "name": "method", "path": "/home/kavia/workspace/code-generation/candidate-match-platform-133245-133254/nextjs_frontend/src/lib/api.ts", "pattern": "/^  method?: HttpMethod;$/", "language": "TypeScript", "kind": "property", "scope": "JsonRequestOptions", "scopeKind": "interface"}, {"_type": "tag", "name": "path", "path": "/home/kavia/workspace/code-generation/candidate-match-platform-133245-133254/nextjs_frontend/src/lib/api.ts", "pattern": "/^  path: string;$/", "language": "TypeScript", "kind": "property", "scope": "JsonRequestOptions", "scopeKind": "interface"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/candidate-match-platform-133245-133254/nextjs_frontend/src/lib/api.ts", "pattern": "/^  const res = await fetch(url, init);$/", "language": "TypeScript", "kind": "constant", "scope": "jsonRequest", "scopeKind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/candidate-match-platform-133245-133254/nextjs_frontend/src/lib/api.ts", "pattern": "/^  const url = `${getApiBaseUrl()}${path}`;$/", "language": "TypeScript", "kind": "constant", "scope": "jsonRequest", "scopeKind": "function"}], "hash": "04f449cce0b3222b8705c5808842d443", "format-version": 4, "code-base-name": "nextjs_frontend", "filename": "nextjs_frontend/src/lib/api.ts", "fields": [{"name": "interface JsonRequestOptions<TBody> {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "body?: TBody;", "scope": "JsonRequestOptions", "scopeKind": "interface", "description": "unavailable"}, {"name": "headers?: Record<string, string>;", "scope": "JsonRequestOptions", "scopeKind": "interface", "description": "unavailable"}, {"name": "method?: HttpMethod;", "scope": "JsonRequestOptions", "scopeKind": "interface", "description": "unavailable"}, {"name": "path: string;", "scope": "JsonRequestOptions", "scopeKind": "interface", "description": "unavailable"}]}